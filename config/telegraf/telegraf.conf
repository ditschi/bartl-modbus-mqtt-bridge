[global_tags]

[agent]
  interval = "5s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = "bartl-wp"
  omit_hostname = false
  debug = true

[[outputs.influxdb_v2]]
  urls = ["https://${INFLUXDB_URL}"]
  ## Token for authentication.
  token = "${INFLUXDB_TOKEN}"
  ## Organization is the name of the organization you wish to write to; must exist.
  organization = "${INFLUXDB_ORG}"
  ## Destination bucket to write into.
  bucket = "${INFLUXDB_BUCKET}"
  insecure_skip_verify = true

[[inputs.mqtt_consumer]]
  servers = ["tcp://${MQTT_SERVER_ADDRESS}:${MQTT_SERVER_PORT}"]
  username = "${MQTT_SERVER_USER}"
  password = "${MQTT_SERVER_PASSWORD}"
  topics = [
    "bartl_wp/raumtemperatur/+/#"
  ]
  name_override = "Raumtemperatur"
  data_type = "float"
  data_format = "value"

[[inputs.mqtt_consumer]]
  servers = ["tcp://${MQTT_SERVER_ADDRESS}:${MQTT_SERVER_PORT}"]
  username = "${MQTT_SERVER_USER}"
  password = "${MQTT_SERVER_PASSWORD}"
  topics = [
    "bartl_wp/heizkreis/+/#"
  ]
  name_override = "Heizkreis"
  data_type = "float"
  data_format = "value"

[[inputs.mqtt_consumer]]
  servers = ["tcp://${MQTT_SERVER_ADDRESS}:${MQTT_SERVER_PORT}"]
  username = "${MQTT_SERVER_USER}"
  password = "${MQTT_SERVER_PASSWORD}"
  topics = [
    "bartl_wp/puffer/+/#"
  ]
  name_override = "Puffer"
  data_type = "float"
  data_format = "value"

[[inputs.mqtt_consumer]]
  servers = ["tcp://${MQTT_SERVER_ADDRESS}:${MQTT_SERVER_PORT}"]
  username = "${MQTT_SERVER_USER}"
  password = "${MQTT_SERVER_PASSWORD}"
  topics = [
    "bartl_wp/warmwasser/+/#"
  ]
  name_override = "Warmwasser"
  data_type = "float"
  data_format = "value"

[[inputs.mqtt_consumer]]
  servers = ["tcp://${MQTT_SERVER_ADDRESS}:${MQTT_SERVER_PORT}"]
  username = "${MQTT_SERVER_USER}"
  password = "${MQTT_SERVER_PASSWORD}"
  topics = [
    "bartl_wp/waermepumpe/+/#",
  ]
  name_override = "Waermepumpe"
  data_type = "float"
  data_format = "value"

[[inputs.mqtt_consumer]]
  servers = ["tcp://${MQTT_SERVER_ADDRESS}:${MQTT_SERVER_PORT}"]
  username = "${MQTT_SERVER_USER}"
  password = "${MQTT_SERVER_PASSWORD}"
  topics = [
    "bartl_wp/unknown/+/#"
  ]
  name_override = "unknown"
  data_type = "float"
  data_format = "value"


[[inputs.mqtt_consumer]]
  servers = ["tcp://${MQTT_SERVER_ADDRESS}:${MQTT_SERVER_PORT}"]
  username = "${MQTT_SERVER_USER}"
  password = "${MQTT_SERVER_PASSWORD}"
  topics = [
    "bartl_wp/status/#",
  ]
  name_override = "status"
  data_type = "string"
  data_format = "value"

[[processors.strings]]
  [[processors.strings.trim_prefix]]
    tag = "topic"
    prefix = "bartl_wp/"


[[processors.regex]]
  [[processors.regex.fields]]
    key = "topic"
    pattern = "^(\\w+?)\\/.*"
    replacement = "--${1}--"
    result_key = "test_category"

  [[processors.regex.tags]]
    key = "topic"
    pattern = "^\\w+?\\/(.*)"
    replacement = "__${1}__"
